<?php
declare(strict_types=1);

namespace App\DTO;

use Articus\DataTransfer\Annotation as DTA;

/**
 */
class ActivateSubscriptionRequest
{
    /**
     * A payment token generated by monei.js [Components](https://docs.monei.com/docs/monei-js-overview) or a paymentToken [saved after a previous successful payment](https://docs.monei.com/docs/save-payment-method). In case of the first one, you will also need to send the &#x60;sessionId&#x60; used to generate the token in the first place.
     * @DTA\Data(field="paymentToken", nullable=true)
     * @DTA\Validator(name="Scalar", options={"type":"string"})
     * @var string|null
     */
    public $payment_token;

    /**
     * A unique identifier within your system that adds security to the payment process. You need to pass the same session ID as the one used on the frontend to initialize MONEI Component (if you needed to). This is required if a payment token (not permanent) was already generated in the frontend.
     * @DTA\Data(field="sessionId", nullable=true)
     * @DTA\Validator(name="Scalar", options={"type":"string"})
     * @var string|null
     */
    public $session_id;

    /**
     * The amount to be added to the subscription&#39;s initial payment. A positive integer representing how much to charge in the smallest currency unit (e.g., 100 cents to charge 1.00 USD).
     * @DTA\Data(field="addAmount", nullable=true)
     * @DTA\Validator(name="Scalar", options={"type":"int"})
     * @var int|null
     */
    public $add_amount;

    /**
     * A permanent identifier that refers to the initial payment of a sequence of payments. This value needs to be sent in the path for &#x60;RECURRING&#x60; payments.
     * @DTA\Data(field="sequenceId", nullable=true)
     * @DTA\Validator(name="Scalar", options={"type":"string"})
     * @var string|null
     */
    public $sequence_id;

    /**
     * The URL the customer will be directed to after transaction completed (successful or failed - except if &#x60;failUrl&#x60; is provided).
     * @DTA\Data(field="completeUrl", nullable=true)
     * @DTA\Validator(name="Scalar", options={"type":"string"})
     * @var string|null
     */
    public $complete_url;

    /**
     * The URL the customer will be directed to after transaction has failed, instead of &#x60;completeUrl&#x60; (used in hosted payment page). This allows to provide two different URLs for successful and failed payments.
     * @DTA\Data(field="failUrl", nullable=true)
     * @DTA\Validator(name="Scalar", options={"type":"string"})
     * @var string|null
     */
    public $fail_url;

    /**
     * The URL the customer will be directed to if they decide to cancel payment and return to your website (used in hosted payment page).
     * @DTA\Data(field="cancelUrl", nullable=true)
     * @DTA\Validator(name="Scalar", options={"type":"string"})
     * @var string|null
     */
    public $cancel_url;

}
